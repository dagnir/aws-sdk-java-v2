/*
 * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *  http://aws.amazon.com/apache2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

package software.amazon.awssdk.services.dynamodbv2.mapper;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.Test;
import software.amazon.awssdk.services.dynamodbv2.DynamoDBMapperIntegrationTestBase;
import software.amazon.awssdk.services.dynamodbv2.datamodeling.ConversionSchemas;
import software.amazon.awssdk.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import software.amazon.awssdk.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import software.amazon.awssdk.services.dynamodbv2.datamodeling.DynamoDBMapperConfig;
import software.amazon.awssdk.services.dynamodbv2.datamodeling.DynamoDBMappingException;
import software.amazon.awssdk.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import software.amazon.awssdk.services.dynamodbv2.datamodeling.DynamoDBTable;
import software.amazon.awssdk.services.dynamodbv2.datamodeling.DynamoDBVersionAttribute;
import software.amazon.awssdk.services.dynamodbv2.datamodeling.DynamoDbMapper;
import software.amazon.awssdk.services.dynamodbv2.model.AttributeValue;
import software.amazon.awssdk.services.dynamodbv2.model.PutItemRequest;

/**
 * Tests of exception handling
 */
public class ExceptionHandlingIntegrationTest extends DynamoDBMapperIntegrationTestBase {

    @Test(expected = DynamoDBMappingException.class)
    public void testNoTableAnnotation() throws Exception {
        DynamoDbMapper util = new DynamoDbMapper(dynamo);
        util.save(new NoTableAnnotation());
    }

    @Test(expected = DynamoDBMappingException.class)
    public void testNoTableAnnotationLoad() throws Exception {
        DynamoDbMapper util = new DynamoDbMapper(dynamo);
        util.load(NoTableAnnotation.class, "abc");
    }

    @Test(expected = DynamoDBMappingException.class)
    public void testNoDefaultConstructor() {
        DynamoDbMapper util = new DynamoDbMapper(dynamo);
        NoDefaultConstructor obj = new NoDefaultConstructor("" + startKey++, "abc");
        util.save(obj);
        util.load(NoDefaultConstructor.class, obj.getKey());
    }

    @Test(expected = DynamoDBMappingException.class)
    public void testNoHashKeyGetter() throws Exception {
        DynamoDbMapper util = new DynamoDbMapper(dynamo);
        util.save(new NoKeyGetterDefined());
    }

    @Test(expected = DynamoDBMappingException.class)
    public void testNoHashKeyGetterLoad() throws Exception {
        DynamoDbMapper util = new DynamoDbMapper(dynamo);
        util.load(NoKeyGetterDefined.class, "abc");
    }

    @Test(expected = DynamoDBMappingException.class)
    public void testPrivateKeyGetter() throws Exception {
        DynamoDbMapper util = new DynamoDbMapper(dynamo);
        util.save(new PrivateKeyGetter());
    }

    @Test(expected = DynamoDBMappingException.class)
    public void testPrivateKeyGetterLoad() throws Exception {
        DynamoDbMapper util = new DynamoDbMapper(dynamo);
        util.load(PrivateKeyGetter.class, "abc");
    }

    @Test(expected = DynamoDBMappingException.class)
    public void testPrivateKeySetter() throws Exception {
        DynamoDbMapper util = new DynamoDbMapper(dynamo);
        util.save(new PrivateKeySetter());
    }

    /*
     * To trigger this error, we need for a service object to be present, so
     * we'll insert one manually.
     */
    @Test(expected = DynamoDBMappingException.class)
    public void testPrivateKeySetterLoad() throws Exception {
        Map<String, AttributeValue> attr = new HashMap<String, AttributeValue>();
        attr.put(KEY_NAME, new AttributeValue().withS("abc"));
        dynamo.putItem(new PutItemRequest().withTableName("aws-java-sdk-util").withItem(attr));
        DynamoDbMapper util = new DynamoDbMapper(dynamo);
        util.load(PrivateKeySetter.class, "abc");
    }

    @Test(expected = DynamoDBMappingException.class)
    public void testPrivateSetterLoad() throws Exception {
        DynamoDbMapper util = new DynamoDbMapper(dynamo);
        PrivateSetter object = new PrivateSetter();
        object.setStringProperty("value");
        util.save(object);
        util.load(PrivateSetter.class, object.getKey());
    }

    @Test(expected = DynamoDBMappingException.class)
    public void testOverloadedSetter() {
        OverloadedSetter obj = new OverloadedSetter();
        obj.setKey("" + startKey++);
        obj.setAttribute("abc", "123");
        DynamoDbMapper mapper = new DynamoDbMapper(dynamo);
        mapper.save(obj);

        mapper.load(OverloadedSetter.class, obj.getKey());
    }

    @Test(expected = DynamoDBMappingException.class)
    public void testWrongTypeForSetter() {
        WrongTypeForSetter obj = new WrongTypeForSetter();
        obj.setKey("" + startKey++);
        obj.setAttribute(123);
        DynamoDbMapper mapper = new DynamoDbMapper(dynamo);
        mapper.save(obj);

        mapper.load(WrongTypeForSetter.class, obj.getKey());
    }

    @Test(expected = DynamoDBMappingException.class)
    public void testWrongDataType() {
        Map<String, AttributeValue> attr = new HashMap<String, AttributeValue>();
        attr.put("integerProperty", new AttributeValue().withS("abc"));
        attr.put(KEY_NAME, new AttributeValue().withS("" + startKey++));
        dynamo.putItem(new PutItemRequest().withTableName("aws-java-sdk-util").withItem(attr));
        DynamoDbMapper util = new DynamoDbMapper(dynamo);
        util.load(NumericFields.class, attr.get(KEY_NAME).getS());
    }

    @Test(expected = DynamoDBMappingException.class)
    public void testWrongDataType2() {
        Map<String, AttributeValue> attr = new HashMap<String, AttributeValue>();
        attr.put("integerProperty", new AttributeValue().withNS("1", "2", "3"));
        attr.put(KEY_NAME, new AttributeValue().withS("" + startKey++));
        dynamo.putItem(new PutItemRequest().withTableName("aws-java-sdk-util").withItem(attr));
        DynamoDbMapper util = new DynamoDbMapper(dynamo);
        util.load(NumericFields.class, attr.get(KEY_NAME).getS());
    }

    // Complex types are not supported by the V1 conversion schema
    @Test(expected = DynamoDBMappingException.class)
    public void testComplexTypeFailure() {
        DynamoDBMapperConfig config = new DynamoDBMapperConfig(ConversionSchemas.V1);
        DynamoDbMapper util = new DynamoDbMapper(dynamo, config);

        ComplexType complexType = new ComplexType("" + startKey++, new ComplexType("" + startKey++, null));
        util.save(complexType);
    }

    @Test(expected = DynamoDBMappingException.class)
    public void testUnsupportedHashKeyType() {
        ComplexType complexType = new ComplexType("" + startKey++, new ComplexType("" + startKey++, null));
        ComplexHashKeyType obj = new ComplexHashKeyType();
        obj.setKey(complexType);
        obj.setAttribute("abc");
        DynamoDbMapper util = new DynamoDbMapper(dynamo);
        util.save(obj);
    }

    // Lists are not supported by the V1 conversion schema.
    @Test(expected = DynamoDBMappingException.class)
    public void testNonSetCollection() {
        DynamoDBMapperConfig config = new DynamoDBMapperConfig(ConversionSchemas.V1);
        DynamoDbMapper mapper = new DynamoDbMapper(dynamo, config);

        NonSetCollectionType obj = new NonSetCollectionType();
        obj.setKey("" + startKey++);
        obj.setBadlyMapped(new ArrayList<String>());
        obj.getBadlyMapped().add("abc");
        mapper.save(obj);
    }

    @Test(expected = DynamoDBMappingException.class)
    public void testFractionalVersionAttribute() {
        FractionalVersionAttribute obj = new FractionalVersionAttribute();
        obj.setKey("" + startKey++);
        obj.setVersion(0d);
        DynamoDbMapper mapper = new DynamoDbMapper(dynamo);
        mapper.save(obj);
    }

    @Test(expected = DynamoDBMappingException.class)
    public void testAutoGeneratedIntegerHashKey() {
        AutoGeneratedIntegerKey obj = new AutoGeneratedIntegerKey();
        obj.setValue("fdgfdsgf");
        DynamoDbMapper mapper = new DynamoDbMapper(dynamo);
        mapper.save(obj);
    }

    @Test(expected = DynamoDBMappingException.class)
    public void testAutoGeneratedIntegerRangeKey() {
        AutoGeneratedIntegerRangeKey obj = new AutoGeneratedIntegerRangeKey();
        obj.setKey("Bldadsfa");
        obj.setValue("fdgfdsgf");
        DynamoDbMapper mapper = new DynamoDbMapper(dynamo);
        mapper.save(obj);
    }

    public static class NoTableAnnotation {

        private String key;

        @DynamoDBHashKey
        public String getKey() {
            return key;
        }

        public void setKey(String key) {
            this.key = key;
        }

    }

    @DynamoDBTable(tableName = "aws-java-sdk-util")
    public static class NoDefaultConstructor {

        private String key;
        private String attribute;

        public NoDefaultConstructor(String key, String attribute) {
            super();
            this.key = key;
            this.attribute = attribute;
        }

        @DynamoDBHashKey
        public String getKey() {
            return key;
        }

        public void setKey(String key) {
            this.key = key;
        }

        public String getAttribute() {
            return attribute;
        }

        public void setAttribute(String attribute) {
            this.attribute = attribute;
        }
    }

    @DynamoDBTable(tableName = "aws-java-sdk-util")
    public static class NoKeyGetterDefined {

        @SuppressWarnings("unused")
        private String key;
    }

    @DynamoDBTable(tableName = "aws-java-sdk-util")
    public static class PrivateKeyGetter {

        private String key;

        @SuppressWarnings("unused")
        @DynamoDBHashKey
        private String getKey() {
            return key;
        }

        @SuppressWarnings("unused")
        private void setKey(String key) {
            this.key = key;
        }
    }

    @DynamoDBTable(tableName = "aws-java-sdk-util")
    public static class PrivateKeySetter {

        private String key;

        @DynamoDBHashKey
        @DynamoDBAutoGeneratedKey
        public String getKey() {
            return key;
        }

        @SuppressWarnings("unused")
        private void setKey(String key) {
            this.key = key;
        }
    }

    @DynamoDBTable(tableName = "aws-java-sdk-util")
    public static class PrivateSetter {

        private String key;
        private String stringProperty;

        @DynamoDBHashKey
        public String getKey() {
            return key;
        }

        public void setKey(String key) {
            this.key = key;
        }

        public String getStringProperty() {
            return stringProperty;
        }

        private void setStringProperty(String stringProperty) {
            this.stringProperty = stringProperty;
        }
    }

    @DynamoDBTable(tableName = "aws-java-sdk-util")
    public static class OverloadedSetter {

        private String key;
        private String attribute;

        @DynamoDBHashKey
        public String getKey() {
            return key;
        }

        public void setKey(String key) {
            this.key = key;
        }

        public String getAttribute() {
            return attribute;
        }

        public void setAttribute(String attribute, String unused) {
            this.attribute = attribute;
        }
    }

    @DynamoDBTable(tableName = "aws-java-sdk-util")
    public static class WrongTypeForSetter {

        private String key;
        private String attribute;

        @DynamoDBHashKey
        public String getKey() {
            return key;
        }

        public void setKey(String key) {
            this.key = key;
        }

        public String getAttribute() {
            return attribute;
        }

        public void setAttribute(Integer attribute) {
            this.attribute = String.valueOf(attribute);
        }

    }

    @DynamoDBTable(tableName = "aws-java-sdk-util")
    public static class NumericFields {

        private String key;
        private Integer integerProperty;

        @DynamoDBHashKey
        public String getKey() {
            return key;
        }

        public void setKey(String key) {
            this.key = key;
        }

        public Integer getIntegerProperty() {
            return integerProperty;
        }

        public void setIntegerProperty(Integer integerProperty) {
            this.integerProperty = integerProperty;
        }

    }

    @DynamoDBTable(tableName = "aws-java-sdk-util")
    public static class ComplexType {

        public String key;
        public ComplexType type;

        public ComplexType(String key, ComplexType type) {
            super();
            this.key = key;
            this.type = type;
        }

        @DynamoDBHashKey
        public String getKey() {
            return key;
        }

        public void setKey(String key) {
            this.key = key;
        }

        public ComplexType getType() {
            return type;
        }

        public void setType(ComplexType type) {
            this.type = type;
        }
    }

    @DynamoDBTable(tableName = "aws-java-sdk-util")
    public static class ComplexHashKeyType {

        private ComplexType key;
        private String attribute;

        @DynamoDBHashKey
        public ComplexType getKey() {
            return key;
        }

        public void setKey(ComplexType key) {
            this.key = key;
        }

        public String getAttribute() {
            return attribute;
        }

        public void setAttribute(String attribute) {
            this.attribute = attribute;
        }
    }

    @DynamoDBTable(tableName = "aws-java-sdk-util")
    public static class NonSetCollectionType {

        private String key;
        private List<String> badlyMapped;

        @DynamoDBHashKey
        public String getKey() {
            return key;
        }

        public void setKey(String key) {
            this.key = key;
        }

        public List<String> getBadlyMapped() {
            return badlyMapped;
        }

        public void setBadlyMapped(List<String> badlyMapped) {
            this.badlyMapped = badlyMapped;
        }
    }

    @DynamoDBTable(tableName = "aws-java-sdk-util")
    public static class FractionalVersionAttribute {

        private String key;
        private Double version;

        @DynamoDBHashKey
        public String getKey() {
            return key;
        }

        public void setKey(String key) {
            this.key = key;
        }

        @DynamoDBVersionAttribute
        public Double getVersion() {
            return version;
        }

        public void setVersion(Double version) {
            this.version = version;
        }

    }

    @DynamoDBTable(tableName = "aws-java-sdk-util")
    public static class AutoGeneratedIntegerKey {

        private Integer key;
        private String value;

        @DynamoDBHashKey
        @DynamoDBAutoGeneratedKey
        public Integer getKey() {
            return key;
        }

        public void setKey(Integer key) {
            this.key = key;
        }

        public String getValue() {
            return value;
        }

        public void setValue(String value) {
            this.value = value;
        }

    }

    @DynamoDBTable(tableName = "aws-java-sdk-util")
    public static class AutoGeneratedIntegerRangeKey {

        private String key;
        private Integer rangekey;
        private String value;

        @DynamoDBHashKey
        public String getKey() {
            return key;
        }

        public void setKey(String key) {
            this.key = key;
        }

        @DynamoDBAutoGeneratedKey
        @DynamoDBRangeKey
        public Integer getRangekey() {
            return rangekey;
        }

        public void setRangekey(Integer rangekey) {
            this.rangekey = rangekey;
        }

        public String getValue() {
            return value;
        }

        public void setValue(String value) {
            this.value = value;
        }

    }

}
